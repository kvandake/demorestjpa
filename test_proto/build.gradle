import org.gradle.internal.os.OperatingSystem
version '1'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        ivy {
            artifactPattern "http://dl.bintray.com/bsideup/thirdparty/[artifact]-[revision](-[classifier]).[ext]"
        }
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.7.7'
        classpath "ru.trylogic.gradle.plugins:gradle-thrift-plugin:0.1.0"
    }
}

apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'thrift'

sourceCompatibility =1.5

repositories {
    mavenCentral()
    jcenter()

    ivy {
        artifactPattern "http://dl.bintray.com/bsideup/thirdparty/[artifact]-[revision](-[classifier]).[ext]"
    }
}

dependencies {

    Map platformMapping = [
            (OperatingSystem.WINDOWS) : 'win',
            (OperatingSystem.MAC_OS) : 'osx'
    ].withDefault { 'nix' }

    thrift "org.apache.thrift:thrift:0.9.0:${platformMapping.get(OperatingSystem.current())}@bin"

    compile 'org.slf4j:slf4j-api:1.7.12'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile "org.apache.thrift:libthrift:0.9.3"
}


// Define Thrift compile task. Default source dir is src/main/thrift, but you can override it.
task generateThrift(type : ru.trylogic.gradle.thrift.tasks.ThriftCompileTask) {
    generator = 'java:beans,hashcode'
    destinationDir = file("$buildDir/generated-sources/thrift/java")
}

compileJava.dependsOn generateThrift

sourceSets {
    main {
        java {
            // Add generated Thrift files to the main java sources list.
            srcDir generateThrift.destinationDir
        }

        proto {
            // In addition to the default 'src/main/proto'
            srcDir 'src/main/protobuf'
            // In addition to the default '**/*.proto' (use with caution).
            // Using an extension other than 'proto' is NOT recommended,
            // because when proto files are published along with class files, we can
            // only tell the type of a file from its extension.
            include '**/*.protodevel'
        }
    }
}

protobuf {
    // Configure the protoc executable
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:3.0.0-alpha-3'
    }
}




